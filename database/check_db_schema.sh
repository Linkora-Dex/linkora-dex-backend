#!/bin/bash

# Copyright (C) 2025 Linkora DEX
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# For commercial licensing, contact: licensing@linkora.info


# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤
execute_sql() {
    local query="$1"
    local description="$2"

    echo -e "${BLUE}=== $description ===${NC}"
    docker exec -it crypto_timescaledb psql -U crypto_user -d crypto_data -c "$query"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∏—Ö–∏—Ö SQL –∑–∞–ø—Ä–æ—Å–æ–≤ (—Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç)
execute_sql_quiet() {
    local query="$1"
    docker exec -it crypto_timescaledb psql -U crypto_user -d crypto_data -t -c "$query" 2>/dev/null | tr -d ' '
}

echo -e "${GREEN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö${NC}"
echo "========================================"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã orders
execute_sql "
SELECT
    column_name,
    data_type,
    column_default,
    is_nullable,
    character_maximum_length
FROM information_schema.columns
WHERE table_name = 'orders'
ORDER BY ordinal_position;
" "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã orders"

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π CHECK
execute_sql "
SELECT
    constraint_name,
    check_clause
FROM information_schema.check_constraints
WHERE constraint_name LIKE '%order%' OR constraint_name LIKE '%status%';
" "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è CHECK –¥–ª—è orders"

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
execute_sql "
SELECT
    indexname,
    indexdef
FROM pg_indexes
WHERE tablename = 'orders';
" "–ò–Ω–¥–µ–∫—Å—ã —Ç–∞–±–ª–∏—Ü—ã orders"

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö - —Ç–∏–ø—ã –æ—Ä–¥–µ—Ä–æ–≤
execute_sql "
SELECT
    order_type,
    COUNT(*) as count
FROM orders
GROUP BY order_type
ORDER BY count DESC;
" "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –æ—Ä–¥–µ—Ä–æ–≤"

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö - —Å—Ç–∞—Ç—É—Å—ã –æ—Ä–¥–µ—Ä–æ–≤
execute_sql "
SELECT
    status,
    COUNT(*) as count
FROM orders
GROUP BY status
ORDER BY count DESC;
" "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—Ä–¥–µ—Ä–æ–≤"

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—É—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ –≤ —á–∏—Å–ª–∞—Ö
execute_sql "
SELECT
    id,
    amount_in,
    amount_in::text as amount_text,
    target_price,
    target_price::text as price_text,
    min_amount_out,
    min_amount_out::text as min_out_text
FROM orders
LIMIT 3;
" "–ü—Ä–∏–º–µ—Ä—ã —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π (–Ω–∞—É—á–Ω–∞—è –Ω–æ—Ç–∞—Ü–∏—è)"

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ NULL –∑–Ω–∞—á–µ–Ω–∏–π
execute_sql "
SELECT
    COUNT(*) as total_orders,
    COUNT(executed_at) as with_executed_at,
    COUNT(*) - COUNT(executed_at) as null_executed_at
FROM orders;
" "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ NULL –∑–Ω–∞—á–µ–Ω–∏–π"

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö
execute_sql "
SELECT
    pg_size_pretty(pg_total_relation_size('orders')) as table_size,
    COUNT(*) as total_rows
FROM orders;
" "–†–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã orders"

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
execute_sql "
SELECT
    id,
    user_address,
    order_type,
    status,
    created_at
FROM orders
ORDER BY created_at DESC
LIMIT 5;
" "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ä–¥–µ—Ä–æ–≤"

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}üîç –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ STOP_LOSS –≤–º–µ—Å—Ç–æ STOP
STOP_LOSS_COUNT=$(execute_sql_quiet "SELECT COUNT(*) FROM orders WHERE order_type = 'STOP_LOSS';")
if [ "$STOP_LOSS_COUNT" -gt 0 ]; then
    echo -e "${RED}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $STOP_LOSS_COUNT –æ—Ä–¥–µ—Ä–æ–≤ —Å —Ç–∏–ø–æ–º 'STOP_LOSS' (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'STOP')${NC}"

    echo -e "${YELLOW}–•–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? (y/n):${NC}"
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
        execute_sql "UPDATE orders SET order_type = 'STOP' WHERE order_type = 'STOP_LOSS';" "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ STOP_LOSS ‚Üí STOP"
        echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ –¢–∏–ø—ã –æ—Ä–¥–µ—Ä–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
execute_sql "
SELECT DISTINCT status
FROM orders
WHERE status NOT IN ('PENDING', 'EXECUTED', 'CANCELLED', 'FAILED');
" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)"

echo -e "${GREEN}üèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"